{
	"info": {
		"_postman_id": "03aca636-02d4-4799-b8e4-d1e8a10e8e7c",
		"name": "PUT Users/id",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1496418"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "POST users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.collectionVariables.set(\"test_id\", pm.response.json().id);",
									"pm.collectionVariables.set(\"test_email\", pm.response.json().email);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test PUT\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "PUT users No access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData.message).to.equal('Resource not found')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test PUT\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users Access token invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData.message).to.equal('Resource not found')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "invalid!",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test PUT\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation",
			"item": [
				{
					"name": "PUT users - name empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('name')",
									"    pm.expect(jsonData[0].message).to.equal('can\\'t be blank')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - email empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('email')",
									"    pm.expect(jsonData[0].message).to.equal('can\\'t be blank')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Name\",\n    \"email\": \"\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - email invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('email')",
									"    pm.expect(jsonData[0].message).to.equal('is invalid')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Name\",\n    \"email\": \"invalid\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - gender empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('gender')",
									"    pm.expect(jsonData[0].message).to.equal('can\\'t be blank, can be male of female')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Name\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - gender invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('gender')",
									"    pm.expect(jsonData[0].message).to.equal('can\\'t be blank, can be male of female')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Name\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"invalid\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - gender invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('gender')",
									"    pm.expect(jsonData[0].message).to.equal('can\\'t be blank, can be male of female')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Name\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"invalid\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - status empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData[0].field).to.equal('status')",
									"    pm.expect(jsonData[0].message).to.equal('can\\'t be blank')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Name\",\n    \"email\": \"{{$guid}}@testing.net\",\n    \"gender\": \"male\",\n    \"status\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - all fields empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Correct message returned', () => {",
									"    pm.expect(jsonData).to.deep.equal([",
									"    {",
									"        \"field\": \"email\",",
									"        \"message\": \"can't be blank\"",
									"    },",
									"    {",
									"        \"field\": \"name\",",
									"        \"message\": \"can't be blank\"",
									"    },",
									"    {",
									"        \"field\": \"gender\",",
									"        \"message\": \"can't be blank, can be male of female\"",
									"    },",
									"    {",
									"        \"field\": \"status\",",
									"        \"message\": \"can't be blank\"",
									"    }",
									"])",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"email\": \"\",\n    \"gender\": \"\",\n    \"status\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "PUT users - name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"let email = pm.collectionVariables.get(\"test_email\")",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Returns expected data', () => {",
									"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get('test_id'))",
									"    pm.expect(jsonData.name).to.equal('Test PUT Updated')",
									"    pm.expect(jsonData.email).to.equal(`${email}`)",
									"    pm.expect(jsonData.gender).to.equal('male')",
									"    pm.expect(jsonData.status).to.equal('active')",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test PUT Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"let email = pm.collectionVariables.get(\"test_email\")",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Returns expected data', () => {",
									"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get('test_id'))",
									"    pm.expect(jsonData.name).to.equal('Test PUT Updated')",
									"    pm.expect(jsonData.email).to.equal(`${email}.updated`)",
									"    pm.expect(jsonData.gender).to.equal('male')",
									"    pm.expect(jsonData.status).to.equal('active')",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}.updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - gender",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"let email = pm.collectionVariables.get(\"test_email\")",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Returns expected data', () => {",
									"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get('test_id'))",
									"    pm.expect(jsonData.name).to.equal('Test PUT Updated')",
									"    pm.expect(jsonData.email).to.equal(`${email}.updated`)",
									"    pm.expect(jsonData.gender).to.equal('female')",
									"    pm.expect(jsonData.status).to.equal('active')",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"let email = pm.collectionVariables.get(\"test_email\")",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Returns expected data', () => {",
									"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get('test_id'))",
									"    pm.expect(jsonData.name).to.equal('Test PUT Updated')",
									"    pm.expect(jsonData.email).to.equal(`${email}.updated`)",
									"    pm.expect(jsonData.gender).to.equal('female')",
									"    pm.expect(jsonData.status).to.equal('inactive')",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"inactive\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users - all fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"let email = pm.collectionVariables.get(\"test_email\")",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Returns expected data', () => {",
									"    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get('test_id'))",
									"    pm.expect(jsonData.name).to.equal('Test PUT Updated Again')",
									"    pm.expect(jsonData.email).to.equal(`${email}.updated.again`)",
									"    pm.expect(jsonData.gender).to.equal('male')",
									"    pm.expect(jsonData.status).to.equal('active')",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test PUT Updated Again\",\n    \"email\": \"{{test_email}}.updated.again\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{test_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "test_id",
			"value": ""
		},
		{
			"key": "test_email",
			"value": ""
		}
	]
}