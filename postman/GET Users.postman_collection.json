{
	"info": {
		"_postman_id": "38b8cd4a-5139-4ff9-bbf0-84a049e57fb2",
		"name": "GET Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1496418"
	},
	"item": [
		{
			"name": "Validation",
			"item": [
				{
					"name": "GET users pagination data string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Invalid params ignored and default number of results returned', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=page&per_page=many",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "page"
								},
								{
									"key": "per_page",
									"value": "many"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination data invalid number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Invalid params ignored and default number of results returned', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=-1&per_page=-3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "-1"
								},
								{
									"key": "per_page",
									"value": "-3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination data page number only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Default number of results returned', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination data per_page only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('correct number of results returned', () => {",
									"    pm.expect(jsonData.length).equal(30)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?per_page=30",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "per_page",
									"value": "30"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pagination",
			"item": [
				{
					"name": "GET users pagination per_page min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Expected number of items returned', () => {",
									"    pm.expect(jsonData.length).equal(1)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=1&per_page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination per_page max",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Expected number of items returned', () => {",
									"    pm.expect(jsonData.length).equal(100)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=1&per_page=100",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination per_page max+1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Default number of items returned', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=1&per_page=101",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination get first page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Default number of items returned', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									"",
									"pm.collectionVariables.set(\"first_page\", jsonData);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET users pagination get second page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Default number of items returned', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									"",
									"let firstPage = pm.collectionVariables.get(\"first_page\");",
									"",
									"pm.test('Second page is different than first page', () => {",
									"    pm.expect(firstPage).not.deep.equals(jsonData)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=2&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "GET users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains 10 items when no pagination data added', () => {",
									"    pm.expect(jsonData.length).equal(10)",
									"})",
									"",
									"pm.test('Each returned item contains required fields', () => {",
									"    jsonData.forEach(item => {",
									"        pm.expect(item.id).exist",
									"        pm.expect(item.name).exist",
									"        pm.expect(item.email).exist",
									"        pm.expect(item.gender).exist",
									"    })",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "first_page",
			"value": ""
		}
	]
}